{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfmetada012022"
		},
		"trg_ingest_uploaded_files_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/dd32bb1e-bacf-446c-a8f1-3844234c3083/resourceGroups/adf_udemy_metadata_ingestion/providers/Microsoft.Storage/storageAccounts/blobwebstore1801"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_data_ingestion_json_v4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ingest webstore online sales data into data lake",
				"activities": [
					{
						"name": "Copy Web Store Online Sales Data",
						"description": "Copy online sales data from blob to data lake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_blob_buyalot_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send email notifications",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Log pipeline Success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_util_send_email_notifications",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"systemCode": {
									"value": "@pipeline().parameters.systemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.datasetName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Log pipeline Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Web Store Online Sales Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertPipelineLog]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertFromUtc(utcnow(),'AUS Eastern Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().parameters.runID",
										"type": "Expression"
									},
									"type": "String"
								},
								"SnapshotDate": {
									"value": {
										"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"SourceToTargetID": {
									"value": {
										"value": "2",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartTime": {
									"value": {
										"value": "@convertFromUtc(pipeline().TriggerTime,'AUS Eastern Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								},
								"UpdateAt": {
									"value": {
										"value": "@convertFromUtc(utcnow(),'AUS Eastern Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_asql_dataengineering_metadata",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"systemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"datasetName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"runID": {
						"type": "string",
						"defaultValue": "1"
					},
					"snapshotDate": {
						"type": "string",
						"defaultValue": "2022-01-18"
					}
				},
				"folder": {
					"name": "metadata"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-24T09:09:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_data_ingestion_json_v4_TEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ingest webstore online sales data into data lake",
				"activities": [
					{
						"name": "Copy Web Store Online Sales Data",
						"description": "Copy online sales data from blob to data lake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_blob_buyalot_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send email notifications",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Log pipeline Success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_util_send_email_notifications",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"systemCode": {
									"value": "@pipeline().parameters.systemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.datasetName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Log pipeline Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Web Store Online Sales Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertPipelineLog]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertFromUtc(utcnow(),'AUS Eastern Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().parameters.runID",
										"type": "Expression"
									},
									"type": "String"
								},
								"SnapshotDate": {
									"value": {
										"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"SourceToTargetID": {
									"value": {
										"value": "2",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartTime": {
									"value": {
										"value": "@convertFromUtc(pipeline().TriggerTime,'AUS Eastern Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								},
								"UpdateAt": {
									"value": {
										"value": "@convertFromUtc(utcnow(),'AUS Eastern Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_asql_dataengineering_metadata",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"systemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"datasetName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"runID": {
						"type": "string",
						"defaultValue": "1"
					},
					"snapshotDate": {
						"type": "string",
						"defaultValue": "2022-01-18"
					}
				},
				"folder": {
					"name": "pl_test"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-24T09:09:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_util_set_status_message')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "set the status message from a calling pipeline and constructs a subject and a message",
				"activities": [
					{
						"name": "Switch status",
						"description": "Construct a message and subject depending on the supplied status of either \"success'\" or \"fail\"",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.status",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Success",
									"activities": [
										{
											"name": "Send email notifications - Success Message_copy1",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_util_send_email_notifications",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"systemCode": {
														"value": "@pipeline().parameters.systemCode",
														"type": "Expression"
													},
													"datasetName": {
														"value": "@pipeline().parameters.datasetName",
														"type": "Expression"
													},
													"subject": {
														"value": "@concat('ADF Pipeline: ',pipeline().parameters.triggeredPipeline)",
														"type": "Expression"
													},
													"message": {
														"value": "@concat(pipeline().parameters.triggeredPipeline,' has triggered successfully')",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "Failed",
									"activities": [
										{
											"name": "Send email notifications - Failed Message",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_util_send_email_notifications",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"systemCode": {
														"value": "@pipeline().parameters.systemCode",
														"type": "Expression"
													},
													"datasetName": {
														"value": "@pipeline().parameters.datasetName",
														"type": "Expression"
													},
													"subject": {
														"value": "@concat('ADF Pipeline: ',pipeline().parameters.triggeredPipeline)",
														"type": "Expression"
													},
													"message": {
														"value": "@concat(pipeline().parameters.triggeredPipeline,' has FAILED! Please check Log')",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Send email notifications - Default Message",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_util_send_email_notifications",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"systemCode": {
												"value": "@pipeline().parameters.systemCode",
												"type": "Expression"
											},
											"datasetName": {
												"value": "@pipeline().parameters.datasetName",
												"type": "Expression"
											},
											"subject": {
												"value": "@concat('ADF Pipeline: ',pipeline().parameters.triggeredPipeline)",
												"type": "Expression"
											},
											"message": {
												"value": "@concat(pipeline().parameters.triggeredPipeline,' has NO valid status: ',pipeline().parameters.status, ' expecting Failed or Succeed')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"status": {
						"type": "string"
					},
					"triggeredPipeline": {
						"type": "string"
					},
					"systemCode": {
						"type": "string"
					},
					"datasetName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "utility"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-24T09:09:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trg_ingest_uploaded_files')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_data_ingestion_adhoc_csv",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/finance/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trg_ingest_uploaded_files_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_util_log_pipeline_metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Log pipeline run information (Metadata)",
				"activities": [
					{
						"name": "Test status",
						"description": "Test the status \"Success\" or \"Failed\"",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.status, 'Success')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Log pipeline run info metadata - Failed",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[InsertPipelineLog]",
										"storedProcedureParameters": {
											"EndTime": {
												"value": {
													"value": "@convertFromUtc(utcnow(),'AUS Eastern Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().parameters.pipelineID",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().parameters.pipelineName",
													"type": "Expression"
												},
												"type": "String"
											},
											"RunID": {
												"value": {
													"value": "@pipeline().parameters.runID",
													"type": "Expression"
												},
												"type": "String"
											},
											"SnapshotDate": {
												"value": {
													"value": "@pipeline().parameters.SnapshotDate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"SourceToTargetID": {
												"value": {
													"value": "@pipeline().parameters.sourceToTargetID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"StartTime": {
												"value": {
													"value": "@pipeline().parameters.pipelineTriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"UpdateAt": {
												"value": {
													"value": "@convertFromUtc(utcnow(),'AUS Eastern Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_asql_dataengineering_metadata",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Status and send message",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Log pipeline run info metadata - Failed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_util_set_status_message",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"status": {
												"value": "@pipeline().parameters.status",
												"type": "Expression"
											},
											"triggeredPipeline": {
												"value": "@pipeline().parameters.pipelineName",
												"type": "Expression"
											},
											"systemCode": {
												"value": "@pipeline().parameters.systemCode",
												"type": "Expression"
											},
											"datasetName": {
												"value": "@pipeline().parameters.datasetName",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Log pipeline run info metadata - Success",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[InsertPipelineLog]",
										"storedProcedureParameters": {
											"EndTime": {
												"value": {
													"value": "@convertFromUtc(utcnow(),'AUS Eastern Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().parameters.pipelineID",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().parameters.pipelineName",
													"type": "Expression"
												},
												"type": "String"
											},
											"RunID": {
												"value": {
													"value": "@pipeline().parameters.runID",
													"type": "Expression"
												},
												"type": "String"
											},
											"SnapshotDate": {
												"value": {
													"value": "@pipeline().parameters.SnapshotDate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"SourceToTargetID": {
												"value": {
													"value": "@pipeline().parameters.sourceToTargetID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"StartTime": {
												"value": {
													"value": "@pipeline().parameters.pipelineTriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"UpdateAt": {
												"value": {
													"value": "@convertFromUtc(utcnow(),'AUS Eastern Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_asql_dataengineering_metadata",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SnapshotDate": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"runID": {
						"type": "string"
					},
					"sourceToTargetID": {
						"type": "string"
					},
					"pipelineTriggerTime": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"pipelineName": {
						"type": "string"
					},
					"systemCode": {
						"type": "string"
					},
					"datasetName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "utility"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-24T09:09:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_util_set_status_message')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_data_ingestion_json_v5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ingest webstore online sales data into data lake",
				"activities": [
					{
						"name": "Copy Web Store Online Sales Data",
						"description": "Copy online sales data from blob to data lake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_blob_buyalot_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set success status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy Web Store Online Sales Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_status",
							"value": "Success"
						}
					},
					{
						"name": "Set failed status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy Web Store Online Sales Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_status",
							"value": "Failed"
						}
					},
					{
						"name": "Log pipeline metadata - Success",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set success status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_util_log_pipeline_metadata",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SnapshotDate": {
									"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
									"type": "Expression"
								},
								"status": {
									"value": "@variables('v_status')",
									"type": "Expression"
								},
								"runID": {
									"value": "@pipeline().parameters.runID",
									"type": "Expression"
								},
								"sourceToTargetID": "2",
								"pipelineTriggerTime": {
									"value": "@convertFromUtc(pipeline().TriggerTime, 'AUS Eastern Standard Time')",
									"type": "Expression"
								},
								"pipelineID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"systemCode": {
									"value": "@pipeline().parameters.systemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.datasetName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Log pipeline metadata - Failed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set failed status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_util_log_pipeline_metadata",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SnapshotDate": {
									"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
									"type": "Expression"
								},
								"status": {
									"value": "@variables('v_status')",
									"type": "Expression"
								},
								"runID": {
									"value": "@pipeline().parameters.runID",
									"type": "Expression"
								},
								"sourceToTargetID": "2",
								"pipelineTriggerTime": {
									"value": "@convertFromUtc(pipeline().TriggerTime, 'AUS Eastern Standard Time')",
									"type": "Expression"
								},
								"pipelineID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"systemCode": {
									"value": "@pipeline().parameters.systemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.datasetName",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"systemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"datasetName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"runID": {
						"type": "string",
						"defaultValue": "1"
					},
					"snapshotDate": {
						"type": "string",
						"defaultValue": "2022-01-18"
					}
				},
				"variables": {
					"v_status": {
						"type": "String",
						"defaultValue": "Success"
					}
				},
				"folder": {
					"name": "metadata"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-24T09:09:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_util_log_pipeline_metadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_data_ingestion_json_v6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ingest webstore online sales data into data lake",
				"activities": [
					{
						"name": "Get Source  to Target Details",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetSourceToTargetInfo]",
								"storedProcedureParameters": {
									"Dataset": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.datasetName",
											"type": "Expression"
										}
									},
									"SourceSystemCode": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.systemCode",
											"type": "Expression"
										}
									},
									"Stage": {
										"type": "String",
										"value": {
											"value": "@variables('v_stage')",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "00:10:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_asql_source_to_target_details",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Source to target info",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Source  to Target Details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Source  to Target Details').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy Web Store Online Sales Data",
									"description": "Copy online sales data from blob to data lake",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_blob_buyalot_files_json",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@item().SourceContainer",
													"type": "Expression"
												},
												"directory": {
													"value": "@item().SourceRelativePathSchema",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().SourceTechnicalName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls_data_engineering_folder_json",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@item().TargetContainer",
													"type": "Expression"
												},
												"directory": {
													"value": "@concat(item().TargetRelativePathSchema,'/',formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd'))",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().TargetTechnicalName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set success status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy Web Store Online Sales Data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "v_status",
										"value": "Success"
									}
								},
								{
									"name": "Set failed status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy Web Store Online Sales Data",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "v_status",
										"value": "Failed"
									}
								},
								{
									"name": "Log pipeline metadata - Success",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set success status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_util_log_pipeline_metadata",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SnapshotDate": {
												"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
												"type": "Expression"
											},
											"status": {
												"value": "@variables('v_status')",
												"type": "Expression"
											},
											"runID": {
												"value": "@pipeline().parameters.runID",
												"type": "Expression"
											},
											"sourceToTargetID": {
												"value": "@item().SourceToTargetID",
												"type": "Expression"
											},
											"pipelineTriggerTime": {
												"value": "@convertFromUtc(pipeline().TriggerTime, 'AUS Eastern Standard Time')",
												"type": "Expression"
											},
											"pipelineID": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"pipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"systemCode": {
												"value": "@pipeline().parameters.systemCode",
												"type": "Expression"
											},
											"datasetName": {
												"value": "@pipeline().parameters.datasetName",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Log pipeline metadata - Failed",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set failed status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_util_log_pipeline_metadata",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SnapshotDate": {
												"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
												"type": "Expression"
											},
											"status": {
												"value": "@variables('v_status')",
												"type": "Expression"
											},
											"runID": {
												"value": "@pipeline().parameters.runID",
												"type": "Expression"
											},
											"sourceToTargetID": {
												"value": "@item().SourceToTargetID",
												"type": "Expression"
											},
											"pipelineTriggerTime": {
												"value": "@convertFromUtc(pipeline().TriggerTime, 'AUS Eastern Standard Time')",
												"type": "Expression"
											},
											"pipelineID": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"pipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"systemCode": {
												"value": "@pipeline().parameters.systemCode",
												"type": "Expression"
											},
											"datasetName": {
												"value": "@pipeline().parameters.datasetName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"systemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"datasetName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"runID": {
						"type": "string",
						"defaultValue": "1"
					},
					"snapshotDate": {
						"type": "string",
						"defaultValue": "2022-01-18"
					}
				},
				"variables": {
					"v_status": {
						"type": "String",
						"defaultValue": "Success"
					},
					"v_stage": {
						"type": "String",
						"defaultValue": "SOURCE_TO_RAW"
					}
				},
				"folder": {
					"name": "metadata"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-24T09:09:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_util_log_pipeline_metadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_orch_daily_batch_run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Daily batch run orchestration of ingestion pipeline",
				"activities": [
					{
						"name": "Get Batch Run Details",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetBatch]",
								"storedProcedureParameters": {
									"PFrequency": {
										"type": "String",
										"value": {
											"value": "@variables('v_frequency')",
											"type": "Expression"
										}
									},
									"PSystemCode": {
										"type": "String",
										"value": {
											"value": "@variables('v_systemCode')",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_asql_batch_details",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Batch Run Information",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Batch Run Details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Batch Run Details').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Run Ingestion",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_data_ingestion_json_v6",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"systemCode": {
												"value": "@variables('v_systemCode')",
												"type": "Expression"
											},
											"datasetName": {
												"value": "@item().DatasetName",
												"type": "Expression"
											},
											"runID": {
												"value": "@item().RunID",
												"type": "Expression"
											},
											"snapshotDate": {
												"value": "@item().SnapshotDate",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set Batch Status",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach Batch Run Information",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SetBatchStatus]",
							"storedProcedureParameters": {
								"PFrequency": {
									"value": {
										"value": "@variables('v_frequency')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PSystemCode": {
									"value": {
										"value": "@variables('v_systemCode')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_asql_dataengineering_metadata",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"v_frequency": {
						"type": "String",
						"defaultValue": "Daily"
					},
					"v_systemCode": {
						"type": "String",
						"defaultValue": "OWS"
					}
				},
				"folder": {
					"name": "orchestration"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-24T09:09:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_data_ingestion_json_v6')]"
			]
		}
	]
}